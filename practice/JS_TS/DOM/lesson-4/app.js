// -2. Написать функцию с 2мя параметрами - начальное значение и длина, возвращает массив чисел шагом  1 от начального, указанной длины.
// Выполнить задание 2мя раными вариантами

const getNumberArray = (initValue, length) => {
  let result = [];

  for (let i = initValue; i < initValue + length; i++) {
    result.push(i);
  }

  return result;
};

console.log(getNumberArray(1000, 2));

// -1. Всем элементам дать рамку и размеры, чтобы весь текст был виден и в элементах не было скрола(изначально, в ходе использования он может появится, зарезервируйте место). Все задания разделять линиями на странице, все задания должны работать параллельно и не мешать друг другу. В textarea
// заранее вбейте текст для тестов

// 0. Добавить на страницу textarea, input и кнопку. В texatarea заранее вбить любой текст.
// В инпуп вписываем любой текст.
// По клику на кнопку - проверка наличия текста из input в textarea.
// Если есть совпадение - рамка textarea станет lime, если нету - рамка оранжевая.

buttonTask0.addEventListener("click", () => {
  const regExp = new RegExp(inputTask0.value, "i");

  if (regExp.test(textareaTask0.value)) {
    textareaTask0.style.border = "1px solid lime";
  } else {
    textareaTask0.style.border = "1px solid gold";
  }
});

// 1. Тоже input, textarea и кнопка. В textarea любой заготовленный текст. В инпуп вписываем любое число, по клику на кнопку - оно удаляется из текста(число указанное в input, все ег осовпадения).

buttonTask1.addEventListener("click", () => {
  const regExp = new RegExp(inputTask1.value, "g");

  textareaTask1.value = textareaTask1.value.replace(regExp, "");
});

// 2. Скопировать предыдущее задание, добавить ещё 1 input. Принцип тот же, только числа не удалятся, а заменится на значение второго input.

buttonTask2.addEventListener("click", () => {
  const regExp = new RegExp(inputTask2.value, "g");

  textareaTask2.value = textareaTask2.value.replace(
    regExp,
    inputTask2Val.value
  );
});

// 3. На странице textarea и кнопка. Выбираете любой символ unicode и используете в разных местах и разном кол-ва в тексте textarea(чтобы шли иногда по несколько смайлоа подряд).
// По клику на кнопку - все смайлы дублируются (каждый заменяется на 2 смайла).

buttonTask3.addEventListener("click", () => {
  textareaTask3.value = textareaTask3.value.replace(/(\p{Emoji})/gu, "$1$1");
});

// 4. На странице 2 input, textarea и кнопка, 2й input заблокирован от изменений.
// По клику на кнопку во второй input вписывается кол-во совпадений найденных в textarea на текст из первого input.

// 5. Тоже textarea, кнопка и кнопка "+".
// По клику на кнопку "+" создаётся ещё один input. По двойному клику на input - он удаляется.
// В каждый input можно написать любое слово или число.
// По клику на кнопку - все совпадения из всех input заменяются в тексте textarea на текст из звёздочек - "*". Кол-во звёзд должно совпадать с кол-во символов в заменяемом слове/цифре.

// 6. На странице textarea и кнопка. По клику на кнопку все числа состоящие из 2 цифр - заменяются на перевёрнутые. (Было 12 - стало 21)

// 7. На странице 2 input, textarea и кнопка.
// В 1й инпут вводим шаблон регуляики для поиска(например \d\s\d), во второй любой текст(он будет использоваться для замены).
// По клику на кнопку - текст в textarea сбрасывается на изначальный.
// При вводе в первый input - в живом времени происходит поиск и замена совпадений.
// Все ошибки просто игнорируйте(они будут из-за того что мы можем написать не корректное выражение для поиска, не обращайте на них внимания).

// 8*. Повторить 1е задание, только теперь совпадение в тексте должно подсветится (будто мы его выделили мышкой), цвет текста и фона выделени можно взять любые.
//  По клику на кнопку прошлое совпадение всегда очищать(его выделение).

// 9*. На странице input и textarea. В input вводим любое регулярное выражение, в textarea изначально пусто. В реально времени при ввода в textarea, текст в textarea должен проверяться на совпадение с input и тут же все совпадение заменяется на "*"(кол-во "*" совпадает с кол-вом заменяемых символов)
